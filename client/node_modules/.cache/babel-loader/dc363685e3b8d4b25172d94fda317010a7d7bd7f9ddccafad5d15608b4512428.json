{"ast":null,"code":"var _jsxFileName = \"/Users/adampayne/Desktop/code/personal/recip-me/src/components/Ingredients.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Ingredient from \"./Ingredient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Ingredients = _ref => {\n  _s();\n  let {\n    recipe\n  } = _ref;\n  const [boxChecked, setBoxChecked] = useState(false);\n  function handleChange(e) {\n    let isChecked = e.target.checked;\n    if (e.target.checked) {\n      console.log(e.target.id, \" checked\");\n      setBoxChecked(true);\n    } else {\n      console.log(e.target.id, \"unchecked\");\n      setBoxChecked(false);\n    }\n  }\n  return recipe.ingredients.map((ingredient, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n    children: /*#__PURE__*/_jsxDEV(Ingredient, {\n      recipe: recipe,\n      i: i\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this));\n};\n_s(Ingredients, \"0hiamuglKnf4FQWT/yQq3h7SPXs=\");\n_c = Ingredients;\nexport default Ingredients;\nvar _c;\n$RefreshReg$(_c, \"Ingredients\");","map":{"version":3,"names":["React","useState","Ingredient","Ingredients","recipe","boxChecked","setBoxChecked","handleChange","e","isChecked","target","checked","console","log","id","ingredients","map","ingredient","i"],"sources":["/Users/adampayne/Desktop/code/personal/recip-me/src/components/Ingredients.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Ingredient from \"./Ingredient\";\n\nconst Ingredients = ({ recipe }) => {\n    \n    const [boxChecked, setBoxChecked] = useState(false);\n    \n    function handleChange(e) {\n        let isChecked = e.target.checked\n        \n        if (e.target.checked) {\n            console.log(e.target.id, \" checked\")\n            setBoxChecked(true);\n        } else {\n            console.log(e.target.id, \"unchecked\")\n            setBoxChecked(false);\n        }\n    }\n\n    return (recipe.ingredients.map((ingredient, i) => \n        <p key={i}>\n            <Ingredient recipe={recipe} i={i} />\n        </p>\n        )\n    )\n}\n\nexport default Ingredients;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,cAAc;AAAC;AAEtC,MAAMC,WAAW,GAAG,QAAgB;EAAA;EAAA,IAAf;IAAEC;EAAO,CAAC;EAE3B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAEnD,SAASM,YAAY,CAACC,CAAC,EAAE;IACrB,IAAIC,SAAS,GAAGD,CAAC,CAACE,MAAM,CAACC,OAAO;IAEhC,IAAIH,CAAC,CAACE,MAAM,CAACC,OAAO,EAAE;MAClBC,OAAO,CAACC,GAAG,CAACL,CAAC,CAACE,MAAM,CAACI,EAAE,EAAE,UAAU,CAAC;MACpCR,aAAa,CAAC,IAAI,CAAC;IACvB,CAAC,MAAM;MACHM,OAAO,CAACC,GAAG,CAACL,CAAC,CAACE,MAAM,CAACI,EAAE,EAAE,WAAW,CAAC;MACrCR,aAAa,CAAC,KAAK,CAAC;IACxB;EACJ;EAEA,OAAQF,MAAM,CAACW,WAAW,CAACC,GAAG,CAAC,CAACC,UAAU,EAAEC,CAAC,kBACzC;IAAA,uBACI,QAAC,UAAU;MAAC,MAAM,EAAEd,MAAO;MAAC,CAAC,EAAEc;IAAE;MAAA;MAAA;MAAA;IAAA;EAAG,GADhCA,CAAC;IAAA;IAAA;IAAA;EAAA,QAEL,CACH;AAET,CAAC;AAAA,GAtBKf,WAAW;AAAA,KAAXA,WAAW;AAwBjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}