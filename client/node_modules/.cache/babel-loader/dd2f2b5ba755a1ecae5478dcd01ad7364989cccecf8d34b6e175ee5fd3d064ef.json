{"ast":null,"code":"var window = require('global/window');\nvar nodeCrypto = require('crypto');\nfunction getRandomValues(buf) {\n  if (window.crypto && window.crypto.getRandomValues) {\n    return window.crypto.getRandomValues(buf);\n  }\n  if (typeof window.msCrypto === 'object' && typeof window.msCrypto.getRandomValues === 'function') {\n    return window.msCrypto.getRandomValues(buf);\n  }\n  if (nodeCrypto.randomBytes) {\n    if (!(buf instanceof Uint8Array)) {\n      throw new TypeError('expected Uint8Array');\n    }\n    if (buf.length > 65536) {\n      var e = new Error();\n      e.code = 22;\n      e.message = 'Failed to execute \\'getRandomValues\\' on \\'Crypto\\': The ' + 'ArrayBufferView\\'s byte length (' + buf.length + ') exceeds the ' + 'number of bytes of entropy available via this API (65536).';\n      e.name = 'QuotaExceededError';\n      throw e;\n    }\n    var bytes = nodeCrypto.randomBytes(buf.length);\n    buf.set(bytes);\n    return buf;\n  } else {\n    throw new Error('No secure random number generator available.');\n  }\n}\nmodule.exports = getRandomValues;","map":{"version":3,"names":["window","require","nodeCrypto","getRandomValues","buf","crypto","msCrypto","randomBytes","Uint8Array","TypeError","length","e","Error","code","message","name","bytes","set","module","exports"],"sources":["/Users/adampayne/Desktop/code/personal/ddishes/ddishes/client/node_modules/get-random-values/index.js"],"sourcesContent":["var window = require('global/window');\nvar nodeCrypto = require('crypto');\n\nfunction getRandomValues(buf) {\n  if (window.crypto && window.crypto.getRandomValues) {\n    return window.crypto.getRandomValues(buf);\n  }\n  if (typeof window.msCrypto === 'object' && typeof window.msCrypto.getRandomValues === 'function') {\n    return window.msCrypto.getRandomValues(buf);\n  }\n  if (nodeCrypto.randomBytes) {\n    if (!(buf instanceof Uint8Array)) {\n      throw new TypeError('expected Uint8Array');\n    }\n    if (buf.length > 65536) {\n      var e = new Error();\n      e.code = 22;\n      e.message = 'Failed to execute \\'getRandomValues\\' on \\'Crypto\\': The ' +\n        'ArrayBufferView\\'s byte length (' + buf.length + ') exceeds the ' +\n        'number of bytes of entropy available via this API (65536).';\n      e.name = 'QuotaExceededError';\n      throw e;\n    }\n    var bytes = nodeCrypto.randomBytes(buf.length);\n    buf.set(bytes);\n    return buf;\n  }\n  else {\n    throw new Error('No secure random number generator available.');\n  }\n}\n\nmodule.exports = getRandomValues;\n"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,eAAe,CAAC;AACrC,IAAIC,UAAU,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAElC,SAASE,eAAe,CAACC,GAAG,EAAE;EAC5B,IAAIJ,MAAM,CAACK,MAAM,IAAIL,MAAM,CAACK,MAAM,CAACF,eAAe,EAAE;IAClD,OAAOH,MAAM,CAACK,MAAM,CAACF,eAAe,CAACC,GAAG,CAAC;EAC3C;EACA,IAAI,OAAOJ,MAAM,CAACM,QAAQ,KAAK,QAAQ,IAAI,OAAON,MAAM,CAACM,QAAQ,CAACH,eAAe,KAAK,UAAU,EAAE;IAChG,OAAOH,MAAM,CAACM,QAAQ,CAACH,eAAe,CAACC,GAAG,CAAC;EAC7C;EACA,IAAIF,UAAU,CAACK,WAAW,EAAE;IAC1B,IAAI,EAAEH,GAAG,YAAYI,UAAU,CAAC,EAAE;MAChC,MAAM,IAAIC,SAAS,CAAC,qBAAqB,CAAC;IAC5C;IACA,IAAIL,GAAG,CAACM,MAAM,GAAG,KAAK,EAAE;MACtB,IAAIC,CAAC,GAAG,IAAIC,KAAK,EAAE;MACnBD,CAAC,CAACE,IAAI,GAAG,EAAE;MACXF,CAAC,CAACG,OAAO,GAAG,2DAA2D,GACrE,kCAAkC,GAAGV,GAAG,CAACM,MAAM,GAAG,gBAAgB,GAClE,4DAA4D;MAC9DC,CAAC,CAACI,IAAI,GAAG,oBAAoB;MAC7B,MAAMJ,CAAC;IACT;IACA,IAAIK,KAAK,GAAGd,UAAU,CAACK,WAAW,CAACH,GAAG,CAACM,MAAM,CAAC;IAC9CN,GAAG,CAACa,GAAG,CAACD,KAAK,CAAC;IACd,OAAOZ,GAAG;EACZ,CAAC,MACI;IACH,MAAM,IAAIQ,KAAK,CAAC,8CAA8C,CAAC;EACjE;AACF;AAEAM,MAAM,CAACC,OAAO,GAAGhB,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}