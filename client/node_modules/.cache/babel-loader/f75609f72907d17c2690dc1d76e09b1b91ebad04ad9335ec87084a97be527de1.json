{"ast":null,"code":"var _jsxFileName = \"/Users/adampayne/Desktop/code/personal/recip-me/src/components/Images.js\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Images = _ref => {\n  let {\n    recipe\n  } = _ref;\n  // const [boxChecked, setBoxChecked] = useState(false);\n\n  // function handleChange(e) {\n  //     let isChecked = e.target.checked\n  //     console.log(\"checked\")\n  //     if (e.target.checked) {\n  //         setBoxChecked(true);\n  //     } else {\n  //         setBoxChecked(false);\n  //     }\n  // }\n\n  return recipe.images.map((image, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: recipe.images[i].picture\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this));\n};\n_c = Images;\nexport default Images;\nvar _c;\n$RefreshReg$(_c, \"Images\");","map":{"version":3,"names":["React","useState","Images","recipe","images","map","image","i","picture"],"sources":["/Users/adampayne/Desktop/code/personal/recip-me/src/components/Images.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst Images = ({ recipe }) => {\n    \n    // const [boxChecked, setBoxChecked] = useState(false);\n    \n    // function handleChange(e) {\n    //     let isChecked = e.target.checked\n    //     console.log(\"checked\")\n    //     if (e.target.checked) {\n    //         setBoxChecked(true);\n    //     } else {\n    //         setBoxChecked(false);\n    //     }\n    // }\n\n    return (recipe.images.map((image, i) => \n        <div key={i}>\n            {recipe.images[i].picture}\n        </div>\n        )\n    )\n}\n\nexport default Images;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAExC,MAAMC,MAAM,GAAG,QAAgB;EAAA,IAAf;IAAEC;EAAO,CAAC;EAEtB;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,OAAQA,MAAM,CAACC,MAAM,CAACC,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,kBAC/B;IAAA,UACKJ,MAAM,CAACC,MAAM,CAACG,CAAC,CAAC,CAACC;EAAO,GADnBD,CAAC;IAAA;IAAA;IAAA;EAAA,QAEL,CACL;AAET,CAAC;AAAA,KApBKL,MAAM;AAsBZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}