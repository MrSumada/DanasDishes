{"ast":null,"code":"var _jsxFileName = \"/Users/adampayne/Desktop/code/personal/recip-me/src/components/Ingredient.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Ingredient = prop => {\n  _s();\n  const [boxChecked, setBoxChecked] = useState(false);\n  function handleChange(e) {\n    let isChecked = e.target.checked;\n    console.log(\"checked\");\n    if (e.target.checked) {\n      setBoxChecked(true);\n    } else {\n      setBoxChecked(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      name: \"step-1\"\n      // checked={this.check} \n      ,\n      onChange: e => handleChange(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"step-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"amount\",\n        children: \"2 to 2 \\xBD c.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 33\n      }, this), \" sugar (depending on tartness of apples)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(Ingredient, \"0hiamuglKnf4FQWT/yQq3h7SPXs=\");\n_c = Ingredient;\nexport default Ingredient;\nvar _c;\n$RefreshReg$(_c, \"Ingredient\");","map":{"version":3,"names":["React","useState","Ingredient","prop","boxChecked","setBoxChecked","handleChange","e","isChecked","target","checked","console","log"],"sources":["/Users/adampayne/Desktop/code/personal/recip-me/src/components/Ingredient.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst Ingredient = (prop) => {\n    \n    const [boxChecked, setBoxChecked] = useState(false);\n    \n    function handleChange(e) {\n        let isChecked = e.target.checked\n        console.log(\"checked\")\n        if (e.target.checked) {\n            setBoxChecked(true);\n        } else {\n            setBoxChecked(false);\n        }\n    }\n\n    return (\n        <p>\n            <input type=\"checkbox\" name=\"step-1\" \n            // checked={this.check} \n            onChange={e => handleChange(e)}\n            ></input>\n            <label for=\"step-1\"><span className=\"amount\">2 to 2 Â½ c.</span> sugar (depending on tartness of apples)</label>\n        </p>\n    )\n}\n\nexport default Ingredient;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAExC,MAAMC,UAAU,GAAIC,IAAI,IAAK;EAAA;EAEzB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EAEnD,SAASK,YAAY,CAACC,CAAC,EAAE;IACrB,IAAIC,SAAS,GAAGD,CAAC,CAACE,MAAM,CAACC,OAAO;IAChCC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtB,IAAIL,CAAC,CAACE,MAAM,CAACC,OAAO,EAAE;MAClBL,aAAa,CAAC,IAAI,CAAC;IACvB,CAAC,MAAM;MACHA,aAAa,CAAC,KAAK,CAAC;IACxB;EACJ;EAEA,oBACI;IAAA,wBACI;MAAO,IAAI,EAAC,UAAU;MAAC,IAAI,EAAC;MAC5B;MAAA;MACA,QAAQ,EAAEE,CAAC,IAAID,YAAY,CAACC,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QACtB,eACT;MAAO,GAAG,EAAC,QAAQ;MAAA,wBAAC;QAAM,SAAS,EAAC,QAAQ;QAAA,UAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAO,4CAAwC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QAC/G;AAEZ,CAAC;AAAA,GAvBKL,UAAU;AAAA,KAAVA,UAAU;AAyBhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}