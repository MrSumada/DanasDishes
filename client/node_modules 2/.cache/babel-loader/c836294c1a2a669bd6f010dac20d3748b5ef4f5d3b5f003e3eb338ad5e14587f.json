{"ast":null,"code":"var _jsxFileName = \"/Users/adampayne/Desktop/code/personal/recip-me/src/components/Ingredient.js\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Ingredient = _ref => {\n  let {\n    recipe\n  } = _ref;\n  // const [boxChecked, setBoxChecked] = useState(false);\n\n  // function handleChange(e) {\n  //     let isChecked = e.target.checked\n  //     console.log(\"checked\")\n  //     if (e.target.checked) {\n  //         setBoxChecked(true);\n  //     } else {\n  //         setBoxChecked(false);\n  //     }\n  // }\n\n  return recipe.ingredients.map((ingredient, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      id: `step-${i}`\n      // checked={if (boxChecked) ? true : false} \n      // onChange={e => handleChange(e)}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: `step-${i}`,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this));\n};\n_c = Ingredient;\nexport default Ingredient;\nvar _c;\n$RefreshReg$(_c, \"Ingredient\");","map":{"version":3,"names":["React","useState","Ingredient","recipe","ingredients","map","ingredient","i"],"sources":["/Users/adampayne/Desktop/code/personal/recip-me/src/components/Ingredient.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst Ingredient = ({ recipe }) => {\n    \n    // const [boxChecked, setBoxChecked] = useState(false);\n    \n    // function handleChange(e) {\n    //     let isChecked = e.target.checked\n    //     console.log(\"checked\")\n    //     if (e.target.checked) {\n    //         setBoxChecked(true);\n    //     } else {\n    //         setBoxChecked(false);\n    //     }\n    // }\n\n    return (recipe.ingredients.map((ingredient, i) => \n    <p>\n        <input type=\"checkbox\" id={`step-${i}`} \n        // checked={if (boxChecked) ? true : false} \n        // onChange={e => handleChange(e)}\n        ></input>\n        <label for={`step-${i}`}><span className=\"amount\"></span></label>\n    </p>\n    )\n        \n    )\n}\n\nexport default Ingredient;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAExC,MAAMC,UAAU,GAAG,QAAgB;EAAA,IAAf;IAAEC;EAAO,CAAC;EAE1B;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,OAAQA,MAAM,CAACC,WAAW,CAACC,GAAG,CAAC,CAACC,UAAU,EAAEC,CAAC,kBAC7C;IAAA,wBACI;MAAO,IAAI,EAAC,UAAU;MAAC,EAAE,EAAG,QAAOA,CAAE;MACrC;MACA;IAAA;MAAA;MAAA;MAAA;IAAA,QACS,eACT;MAAO,GAAG,EAAG,QAAOA,CAAE,EAAE;MAAA,uBAAC;QAAM,SAAS,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QACjE,CACH;AAGL,CAAC;AAAA,KAzBKL,UAAU;AA2BhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}